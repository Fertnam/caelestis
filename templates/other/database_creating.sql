-- Создание базы, если есть необходимость - снимите комментарий --
/*CREATE DATABASE IF NOT EXISTS new_caelestis;
USE new_caelestis;*/


-- Таблицы --
CREATE TABLE IF NOT EXISTS cs_user (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	username VARCHAR(24) NOT NULL,
	email VARCHAR(120) NOT NULL,
	password CHAR(60) NOT NULL,
	activation_code CHAR(64) COLLATE utf8_bin,
	registration_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP() NOT NULL,
	balance MEDIUMINT UNSIGNED DEFAULT 0 NOT NULL,
	xf_user_id INT UNSIGNED,
	cs_group_id TINYINT UNSIGNED DEFAULT 2 NOT NULL,
	ban_reason VARCHAR(1000),
	
	PRIMARY KEY(id),
	UNIQUE(username),
	UNIQUE(email),
	UNIQUE(activation_code),
	UNIQUE(xf_user_id)
) ENGINE InnoDB;

CREATE TABLE IF NOT EXISTS cs_group (
	id TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
	name VARCHAR(100) NOT NULL,
	
	PRIMARY KEY(id)
) ENGINE InnoDB;

CREATE TABLE IF NOT EXISTS cs_email_change (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	cs_user_id INT UNSIGNED,
	new_email VARCHAR(120) NOT NULL,
	activation_code CHAR(64) COLLATE utf8_bin,
	change_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP() NOT NULL,
	is_success TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
	
	PRIMARY KEY(id),
	UNIQUE(activation_code)
) ENGINE MyISAM;

CREATE TABLE IF NOT EXISTS cs_cabinet_logs (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	cs_user_id INT UNSIGNED,
	cs_server_id TINYINT UNSIGNED,
	cs_server_status_id TINYINT UNSIGNED,
	purchase_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP() NOT NULL,
	end_action_time TIMESTAMP,
	
	PRIMARY KEY(id)
) ENGINE MyISAM;

CREATE TABLE IF NOT EXISTS cs_server_status (
	id TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
	name VARCHAR(100) NOT NULL,
	month_price SMALLINT UNSIGNED NOT NULL,
	infinite_price SMALLINT UNSIGNED NOT NULL,
	
	PRIMARY KEY(id)
) ENGINE MyISAM;

CREATE TABLE IF NOT EXISTS cs_items_basket (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	cs_user_id INT UNSIGNED,
	cs_server_id TINYINT UNSIGNED,
	cs_item_id MEDIUMINT UNSIGNED,
	count SMALLINT UNSIGNED NOT NULL,
	purchase_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP() NOT NULL,
	is_received TINYINT(1) UNSIGNED NOT NULL,
	
	PRIMARY KEY(id)
) ENGINE MyISAM;

CREATE TABLE IF NOT EXISTS cs_server (
	id TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
	name VARCHAR(100) NOT NULL,
	version VARCHAR(50) NOT NULL,
	
	PRIMARY KEY(id)
) ENGINE MyISAM;

CREATE TABLE IF NOT EXISTS cs_article (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	cs_user_id INT UNSIGNED,
	title VARCHAR(120) NOT NULL,
	content VARCHAR(2000) NOT NULL,
	adding_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP() NOT NULL,
	
	PRIMARY KEY(id)
) ENGINE MyISAM;

CREATE TABLE IF NOT EXISTS cs_user_to_cs_ip (
	cs_user_id INT UNSIGNED NOT NULL,
	cs_ip_id INT UNSIGNED NOT NULL,
	
	PRIMARY KEY(cs_user_id, cs_ip_id)
) ENGINE MyISAM;

CREATE TABLE IF NOT EXISTS cs_authorization_attempt (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	cs_ip_id INT UNSIGNED NOT NULL,
	count TINYINT UNSIGNED NOT NULL DEFAULT 1,
	last_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP() NOT NULL,
	
	PRIMARY KEY(id)
) ENGINE MyISAM;

CREATE TABLE IF NOT EXISTS cs_ip (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	ip VARCHAR(50) NOT NULL,
	
	PRIMARY KEY(id),
	UNIQUE(ip)
) ENGINE MyISAM;

CREATE TABLE IF NOT EXISTS cs_item (
	id MEDIUMINT UNSIGNED NOT NULL AUTO_INCREMENT,
	name VARCHAR(100) NOT NULL,
	description VARCHAR(1000),
	price SMALLINT UNSIGNED NOT NULL,
	
	PRIMARY KEY(id)
) ENGINE MyISAM;

-- Внешние ключи --
ALTER TABLE cs_email_change ADD FOREIGN KEY(cs_user_id) REFERENCES cs_user(id) ON UPDATE CASCADE ON DELETE SET NULL;
ALTER TABLE cs_cabinet_logs ADD FOREIGN KEY(cs_user_id) REFERENCES cs_user(id) ON UPDATE CASCADE ON DELETE SET NULL;
ALTER TABLE cs_cabinet_logs ADD FOREIGN KEY(cs_server_status_id) REFERENCES cs_server_status(id) ON UPDATE CASCADE ON DELETE SET NULL;
ALTER TABLE cs_user ADD FOREIGN KEY(xf_user_id) REFERENCES xf_user(user_id) ON UPDATE CASCADE ON DELETE SET NULL;
ALTER TABLE cs_user ADD FOREIGN KEY(cs_group_id) REFERENCES cs_group(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE cs_items_basket ADD FOREIGN KEY(cs_user_id) REFERENCES cs_user(id) ON UPDATE CASCADE ON DELETE SET NULL;
ALTER TABLE cs_items_basket ADD FOREIGN KEY(cs_server_id) REFERENCES cs_server(id) ON UPDATE CASCADE ON DELETE SET NULL;
ALTER TABLE cs_items_basket ADD FOREIGN KEY(cs_item_id) REFERENCES cs_item(id) ON UPDATE CASCADE ON DELETE SET NULL;
ALTER TABLE cs_user_to_cs_ip ADD FOREIGN KEY(cs_user_id) REFERENCES cs_user(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE cs_user_to_cs_ip ADD FOREIGN KEY(cs_ip_id) REFERENCES cs_ip(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE cs_authorization_attempt ADD FOREIGN KEY(cs_ip_id) REFERENCES cs_ip(id) ON UPDATE CASCADE ON DELETE RESTRICT;

-- Вставка данных --
INSERT INTO cs_group(name) VALUES ("Заблокированные"),("Игроки"),("Модераторы"),("Администраторы"),("Главные администраторы");